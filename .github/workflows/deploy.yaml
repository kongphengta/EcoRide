name: Deploy to VPS

on:
  push:
    branches:
      - master # Ou 'main', ou la branche que vous utilisez pour la production

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug SSH_HOST value
      run: |
        echo "SSH_HOST secret value is: '${{ secrets.SSH_HOST }}'"

    - name: Add known hosts
      run: |
        if [ -z "${{ secrets.SSH_HOST }}" ]; then
          echo "SSH_HOST secret is not set. Aborting."
          exit 1
        fi
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "Attempting to scan host: '${{ secrets.SSH_HOST }}'"
        # Increased timeout to 10s and removed stderr redirection to see potential errors
        if ssh-keyscan -T 10 -p 22 -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts; then
          echo "Host key for ${{ secrets.SSH_HOST }} added to known_hosts."
        else
          echo "Error: ssh-keyscan failed for host ${{ secrets.SSH_HOST }}. SSH connection might fail."
          exit 1
        fi

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.ACTION_ECORIDE }}
        port: 22
        script: |
          set -e # ArrÃªter le script si une commande echoue
          cd ${{ secrets.PROJECT_PATH_ON_SERVER }} 
          echo "Pulling latest changes..."
          # Use fetch and reset to avoid conflicts with local changes on the server
          git fetch origin master
          git reset --hard origin/master
          echo "Installing Composer dependencies..."
          composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist 
          echo "Running database migrations..."
          php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration --env=prod 
          echo "Clearing Symfony cache..."
          php bin/console cache:clear --env=prod
          echo "Warming up Symfony cache..."
          php bin/console cache:warmup --env=prod
          # A common issue with Symfony is file permissions for the var/ directory.
          # The web server user (e.g., www-data) needs write access.
          # Uncomment and adapt the following lines if you face permission issues.
          # You might need to grant sudo access to your SSH user for this.
          # echo "Fixing permissions..."
          # sudo chown -R www-data:www-data var
          # Or using ACLs (if installed: sudo apt-get install acl)
          # sudo setfacl -R -m u:www-data:rwX -m u:$(whoami):rwX var
          # sudo setfacl -dR -m u:www-data:rwX -m u:$(whoami):rwX var
          echo "Deployment finished successfully!"
