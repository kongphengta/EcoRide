name: Deploy to VPS

on:
  push:
    branches:
      - master # Ou 'main', ou la branche que vous utilisez pour la production

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug SSH_HOST value
      run: |
        echo "SSH_HOST secret value is: '${{ secrets.SSH_HOST }}'"

    - name: Add known hosts
      run: |
        if [ -z "${{ secrets.SSH_HOST }}" ]; then
          echo "Error: The SSH_HOST secret is empty or undefined. ssh-keyscan is skipped."
          exit 1
        else
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "Attempting to scan host: '${{ secrets.SSH_HOST }}'"
          if ssh-keyscan -T 5 -p 22 "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts 2>/dev/null; then
            echo "Host key for ${{ secrets.SSH_HOST }} added to known_hosts."
          else
            echo "Error: ssh-keyscan failed for host ${{ secrets.SSH_HOST }}. SSH connection might fail."
            exit 1
          fi
        fi

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        # Vérifiez ces lignes en particulier pour les messages d'erreur de type/structure.
        # Assurez-vous qu'il n'y a pas de guillemets superflus ajoutés manuellement.
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.ACTION_ECORIDE }} # La même clé SSH que pour webfactory/ssh-agent
        port: 22
        script: |
          set -e # Arrêter le script si une commande echoue
          cd ${{ secrets.PROJECT_PATH_ON_SERVER }} 
          echo "Pulling latest changes..."
          git pull origin master
          echo "Installing Composer dependencies..."
          composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist 
          echo "Running database migrations..."
          php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration --env=prod 
          echo "Clearing Symfony cache..."
          php bin/console cache:clear --env=prod
          echo "Warming up Symfony cache..."
          php bin/console cache:warmup --env=prod
          echo "Deployment finished successfully!"