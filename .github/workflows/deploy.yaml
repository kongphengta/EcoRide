name: Deploy to VPS

on:
  workflow_dispatch: # Déploiement manuel uniquement
  # push:
  #   branches:
  #     - master # Déploiement automatique désactivé temporairement

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Important pour rsync pour détecter les changements

    - name: Deploy files to server via rsync
      uses: easingthemes/ssh-deploy@v5.0.0
      with:
        SSH_PRIVATE_KEY: ${{ secrets.ACTION_ECORIDE }}
        REMOTE_HOST: ${{ secrets.SSH_HOST }}
        REMOTE_USER: ${{ secrets.SSH_USER }}
        SOURCE: "./"
        TARGET: ${{ secrets.PROJECT_PATH_ON_SERVER }}
        # Exclure les fichiers et dossiers qui ne doivent pas être déployés
        # ou qui sont gérés directement sur le serveur.
        EXCLUDE: ".git/, node_modules/, .github/, vendor/, var/, public/build/, .env, .env.local, .env.*.local"

    - name: Run post-deployment commands
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.ACTION_ECORIDE }}
        port: 22
        script: |
          set -e # Arrêter le script à la première erreur
          cd ${{ secrets.PROJECT_PATH_ON_SERVER }}

          # Compile les variables d'environnement pour une performance optimale en production.
          echo "Compiling environment variables for production..."
          composer dump-env prod

          echo "Installing Composer dependencies..."
          composer install --no-dev --optimize-autoloader --no-interaction

          echo "Installing Node.js dependencies..."
          npm install

          echo "Building frontend assets for production..."
          npm run build

          echo "Running database migrations..."
          php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration

          echo "Warming up Symfony cache..."
          php bin/console cache:warmup

          # corrige les permissions pour les dossier qui ont besoin d'être écrits par le serveur
          echo "Fixing permissions for var/ and public/build directories..."
          sudo chown -R www-data:www-data var public/build

          echo "Deployment finished successfully!"
