name: Deploy to VPS

on:
  push:
    branches:
      - master # Ou 'main', ou la branche que vous utilisez pour la production

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Fetches your code into the runner
      with:
        fetch-depth: 0 # Important for rsync to detect changes between deployments

    - name: Deploy files to server via rsync
      uses: easingthemes/ssh-deploy@v5.0.0
      with:
        SSH_PRIVATE_KEY: ${{ secrets.ACTION_ECORIDE }}
        REMOTE_HOST: ${{ secrets.SSH_HOST }}
        REMOTE_USER: ${{ secrets.SSH_USER }}
        SOURCE: "./" # The source directory on the runner
        TARGET: ${{ secrets.PROJECT_PATH_ON_SERVER }} # The destination directory on the server
        EXCLUDE: "/.git/, /node_modules/, /.github/" # Exclude unnecessary files from transfer

    - name: Run post-deployment commands
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.ACTION_ECORIDE }}
        port: 22
        # This script now only runs commands on the server after the files are copied.
        script: |
          set -e # Stop script on first error
          cd ${{ secrets.PROJECT_PATH_ON_SERVER }}

          echo "Installing Composer dependencies..."
          composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist

          echo "Running database migrations..."
          php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration --env=prod

          echo "Clearing Symfony cache..."
          php bin/console cache:clear --env=prod

          echo "Warming up Symfony cache..."
          php bin/console cache:warmup --env=prod

          # A common issue with Symfony is file permissions for the var/ directory.
          # The web server user (e.g., www-data) needs write access.
          # Uncomment and adapt the following lines if you face permission issues.
          # echo "Fixing permissions..."
          # sudo chown -R www-data:www-data var

          echo "Deployment finished successfully!"
